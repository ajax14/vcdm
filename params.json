{"tagline":"CDMI-Proxy provides CDMI-compliant proxy server to public cloud backends.","google":"UA-31424463-1","body":"CDMI-Proxy\r\n----------\r\n\r\nCDMI-Proxy is an implementation of a CDMI-compatible (v 1.0.1) server that can be used to store data both using local infrastructure and public cloud services. Multiplatform.\r\n\r\nRead more [documentation](http://resources.venus-c.eu/cdmiproxy/docs/index.html) or proceed to the short setup guide below.\r\n\r\nCurrently supported CDMI objects are:\r\n * Blobs\r\n * Multi-level containers (also for single-level backends, e.g. AWS or Azure)\r\n\r\nCurrently supported backends:\r\n * Local disk\r\n * AWS S3\r\n * Azure Blob\r\n\r\nSETUP\r\n=====\r\n\r\n### Get the code\r\n * git clone git://github.com/livenson/vcdm.git\r\n\r\n### Get dependencies\r\n * pip install -r requirements.txt\r\n * install [CouchDB](http://couchdb.apache.org/)  (at least version 1) \r\n\r\n### Run\r\nRun _start-server.sh_/_start-server.bat_. By default, ports 2365 (plain) and 8080 (tls) will be listening for CDMI calls.\r\n\r\n### Build documentation\r\n* pip install Sphinx\r\n* makedoc.sh\r\n\r\n### Add backends\r\nThere are several backends available at the moment. If you are planning to use them, you also need to get the\r\ncorresponding libraries (and put them on the _PYTHONPATH_ or into _libsrc_ folder):\r\n * [AWS](http://code.google.com/p/boto/)\r\n * [CDMI](https://github.com/livenson/libcdmi-python)\r\n * [Azure](https://github.com/livenson/pyazure)\r\n\r\nLICENSE\r\n=======\r\n\r\nThe terms of use of the software are governed by the Apache 2 license.\r\n\r\nCDMI Clients\r\n=======\r\n\r\n * [libcdmi (java)](https://github.com/livenson/libcdmi-java): SDK for running CDMI calls \r\n * [libcdmi (python)](https://github.com/livenson/libcdmi-python): SDK for running CDMI calls\r\n * [cdmifs](https://github.com/koenbollen/cdmifs): FUSE based file system using the CDMI standard (v1.0).\r\n * [r2ad](http://r2ad.net/): demo clients for OCCI and CDMI\r\n * TCS CDMI Automated Test Suite(CATS): validation test suite for CDMI (contact: nishi.g@tcs.com)\r\n * [Scality Droplet](https://github.com/scality/Droplet) - a library from Scality with support for CDMI\r\n\r\n(c) [Ilja Livenson](mailto:ilja.livenson@gmail.com)\r\n\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"CDMI-Proxy"}